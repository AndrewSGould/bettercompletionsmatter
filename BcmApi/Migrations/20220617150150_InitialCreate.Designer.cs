// <auto-generated />
using System;
using BcmApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BcmApi.Migrations
{
    [DbContext(typeof(BcmContext))]
    [Migration("20220617150150_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bcm.Models.FeatureList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("BackwardsCompat")
                        .HasColumnType("bit");

                    b.Property<bool>("CloudGaming")
                        .HasColumnType("bit");

                    b.Property<bool>("Crossplay")
                        .HasColumnType("bit");

                    b.Property<bool>("EaPlay")
                        .HasColumnType("bit");

                    b.Property<int>("FeatureListOfGameId")
                        .HasColumnType("int");

                    b.Property<bool>("GamePass")
                        .HasColumnType("bit");

                    b.Property<bool>("GamePreview")
                        .HasColumnType("bit");

                    b.Property<bool>("GamesWithGold")
                        .HasColumnType("bit");

                    b.Property<bool>("Hdr")
                        .HasColumnType("bit");

                    b.Property<bool>("IdAtXbox")
                        .HasColumnType("bit");

                    b.Property<bool>("NotBackwardsCompat")
                        .HasColumnType("bit");

                    b.Property<bool>("OnSteam")
                        .HasColumnType("bit");

                    b.Property<bool>("OneXEnhanced")
                        .HasColumnType("bit");

                    b.Property<bool>("OptimizedForSeries")
                        .HasColumnType("bit");

                    b.Property<bool>("PcGamePass")
                        .HasColumnType("bit");

                    b.Property<bool>("PlayAnywhere")
                        .HasColumnType("bit");

                    b.Property<bool>("SmartDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("xCloudTouch")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FeatureListOfGameId")
                        .IsUnique();

                    b.ToTable("FeatureLists");
                });

            modelBuilder.Entity("Bcm.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AchievementCount")
                        .HasColumnType("int");

                    b.Property<double?>("BaseCompletionEstimate")
                        .HasColumnType("float");

                    b.Property<string>("Developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("FullCompletionEstimate")
                        .HasColumnType("float");

                    b.Property<int?>("GamersCompleted")
                        .HasColumnType("int");

                    b.Property<int?>("GamersWithGame")
                        .HasColumnType("int");

                    b.Property<int?>("Gamerscore")
                        .HasColumnType("int");

                    b.Property<double?>("InstallSize")
                        .HasColumnType("float");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ServerClosure")
                        .HasColumnType("datetime2");

                    b.Property<double?>("SiteRating")
                        .HasColumnType("float");

                    b.Property<double?>("SiteRatio")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrueAchievement")
                        .HasColumnType("int");

                    b.Property<int>("TrueAchievementId")
                        .HasColumnType("int");

                    b.Property<bool>("Unobtainables")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Bcm.Models.GameGenre", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("Bcm.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Football"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Third Person Shooter"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Action Horror"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Action-Adventure"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Action-RPG"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Role Playing"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Hack & Slash"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Aerial"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Vehicular Combat"
                        },
                        new
                        {
                            Id = 12,
                            Name = "American Football"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Arcade Racing"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Automobile"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Australian Football"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Baseball"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Basketball"
                        },
                        new
                        {
                            Id = 18,
                            Name = "First Person Shooter"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Battle Royale"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Beat 'em up"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Bowling"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Boxing"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Bull Sports"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Card & Board"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Casino"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Collectible Card Game"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Collection"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Point & Click"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Cricket"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Cue Sports"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Cycling"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Dance"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Darts"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Dodgeball"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Open World"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Dungeon Crawler"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Educational & Trivia"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Party"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Equestrian Sports"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Fishing"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Handball"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Health & Fitness"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Hockey"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Hunting"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Management"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Mech"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Metroidvania"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Mixed Martial Arts"
                        },
                        new
                        {
                            Id = 54,
                            Name = "MMO"
                        },
                        new
                        {
                            Id = 55,
                            Name = "MOBA"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Motocross"
                        },
                        new
                        {
                            Id = 57,
                            Name = "On Rails"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Naval"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Survival"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Paintball"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Pinball"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Real Time"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Roguelite"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Rugby"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Run & Gun"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Sandbox"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Shoot 'em up"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Simulation Racing"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Skateboarding"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Skiing"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Snowboarding"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Stealth"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Survival Horror"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Tennis"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Tower Defence"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Visual Novel"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Volleyball"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Wrestling"
                        },
                        new
                        {
                            Id = 82,
                            Name = "Turn Based"
                        });
                });

            modelBuilder.Entity("Bcm.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrueAchievementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = "Ohio",
                            IsActive = false,
                            Name = "kT Echo",
                            Region = "United States",
                            TrueAchievementId = 104571
                        },
                        new
                        {
                            Id = 2,
                            Area = "Ohio",
                            IsActive = false,
                            Name = "eohjay",
                            Region = "United States",
                            TrueAchievementId = 266752
                        },
                        new
                        {
                            Id = 3,
                            Area = "Ohio",
                            IsActive = false,
                            Name = "IronFistofSnuff",
                            Region = "United States",
                            TrueAchievementId = 405202
                        },
                        new
                        {
                            Id = 4,
                            IsActive = false,
                            Name = "zzScanMan1",
                            TrueAchievementId = 461682
                        });
                });

            modelBuilder.Entity("Bcm.Models.PlayerGame", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("AchievementCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gamerscore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUnlock")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NotForContests")
                        .HasColumnType("bit");

                    b.Property<int?>("Ownership")
                        .HasColumnType("int");

                    b.Property<int?>("Platform")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrueAchievement")
                        .HasColumnType("int");

                    b.HasKey("GameId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerGames");
                });

            modelBuilder.Entity("Bcm.Models.FeatureList", b =>
                {
                    b.HasOne("Bcm.Models.Game", "Game")
                        .WithOne("FeatureList")
                        .HasForeignKey("Bcm.Models.FeatureList", "FeatureListOfGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Bcm.Models.GameGenre", b =>
                {
                    b.HasOne("Bcm.Models.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bcm.Models.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Bcm.Models.PlayerGame", b =>
                {
                    b.HasOne("Bcm.Models.Game", "Game")
                        .WithMany("PlayerGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bcm.Models.Player", "Player")
                        .WithMany("PlayerGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Bcm.Models.Game", b =>
                {
                    b.Navigation("FeatureList")
                        .IsRequired();

                    b.Navigation("GameGenres");

                    b.Navigation("PlayerGames");
                });

            modelBuilder.Entity("Bcm.Models.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("Bcm.Models.Player", b =>
                {
                    b.Navigation("PlayerGames");
                });
#pragma warning restore 612, 618
        }
    }
}

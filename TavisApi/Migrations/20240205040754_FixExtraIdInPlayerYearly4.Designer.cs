// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TavisApi.Context;

#nullable disable

namespace TavisApi.Migrations
{
    [DbContext(typeof(TavisContext))]
    [Migration("20240205040754_FixExtraIdInPlayerYearly4")]
    partial class FixExtraIdInPlayerYearly4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tavis.Models.BcmCompletionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GameId")
                        .HasColumnType("integer");

                    b.Property<double?>("SiteRatio")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("BcmCompletionHistory");
                });

            modelBuilder.Entity("Tavis.Models.BcmMonthlyStat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("AllBuckets")
                        .HasColumnType("boolean");

                    b.Property<long>("BcmPlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("BonusPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Challenge")
                        .HasColumnType("integer");

                    b.Property<bool?>("CommunityBonus")
                        .HasColumnType("boolean");

                    b.Property<bool>("Participation")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BcmPlayerId");

                    b.ToTable("BcmMonthlyStats");
                });

            modelBuilder.Entity("Tavis.Models.BcmPlayer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("LastSync")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TrueAchievementId")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BcmPlayers");
                });

            modelBuilder.Entity("Tavis.Models.BcmPlayerCompletionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long?>("BcmPlayerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("GameId")
                        .HasColumnType("integer");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BcmPlayerId");

                    b.HasIndex("GameId");

                    b.ToTable("BcmPlayerCompletionHistory");
                });

            modelBuilder.Entity("Tavis.Models.BcmPlayerGame", b =>
                {
                    b.Property<int?>("GameId")
                        .HasColumnType("integer");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AchievementCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Gamerscore")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastUnlock")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("NotForContests")
                        .HasColumnType("boolean");

                    b.Property<int?>("Ownership")
                        .HasColumnType("integer");

                    b.Property<int?>("Platform")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TrueAchievement")
                        .HasColumnType("integer");

                    b.HasKey("GameId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("GameId", "PlayerId")
                        .IsUnique();

                    b.ToTable("BcmPlayerGames");
                });

            modelBuilder.Entity("Tavis.Models.BcmRgsc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BcmPlayerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Challenge")
                        .HasColumnType("integer");

                    b.Property<int?>("GameId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Issued")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PoolSize")
                        .HasColumnType("integer");

                    b.Property<int?>("PreviousGameId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("RerollDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Rerolled")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BcmPlayerId");

                    b.ToTable("BcmRgsc");
                });

            modelBuilder.Entity("Tavis.Models.BcmStat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double?>("AveragePoints")
                        .HasColumnType("double precision");

                    b.Property<double?>("AverageRatio")
                        .HasColumnType("double precision");

                    b.Property<double?>("AverageTimeEstimate")
                        .HasColumnType("double precision");

                    b.Property<double?>("BasePoints")
                        .HasColumnType("double precision");

                    b.Property<double?>("BonusPoints")
                        .HasColumnType("double precision");

                    b.Property<int?>("Completions")
                        .HasColumnType("integer");

                    b.Property<double?>("HighestRatio")
                        .HasColumnType("double precision");

                    b.Property<double?>("HighestTimeEstimate")
                        .HasColumnType("double precision");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Rank")
                        .HasColumnType("integer");

                    b.Property<int?>("RankMovement")
                        .HasColumnType("integer");

                    b.Property<double?>("TotalPoints")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("BcmStats");
                });

            modelBuilder.Entity("Tavis.Models.DiscordLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("DiscordLogins");
                });

            modelBuilder.Entity("Tavis.Models.FeatureList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("BackwardsCompat")
                        .HasColumnType("boolean");

                    b.Property<bool>("CloudGaming")
                        .HasColumnType("boolean");

                    b.Property<bool>("Crossplay")
                        .HasColumnType("boolean");

                    b.Property<bool>("EaPlay")
                        .HasColumnType("boolean");

                    b.Property<int?>("FeatureListOfGameId")
                        .HasColumnType("integer");

                    b.Property<bool>("GamePass")
                        .HasColumnType("boolean");

                    b.Property<bool>("GamePreview")
                        .HasColumnType("boolean");

                    b.Property<bool>("GamesWithGold")
                        .HasColumnType("boolean");

                    b.Property<bool>("Hdr")
                        .HasColumnType("boolean");

                    b.Property<bool>("IdAtXbox")
                        .HasColumnType("boolean");

                    b.Property<bool>("NotBackwardsCompat")
                        .HasColumnType("boolean");

                    b.Property<bool>("OnSteam")
                        .HasColumnType("boolean");

                    b.Property<bool>("OneXEnhanced")
                        .HasColumnType("boolean");

                    b.Property<bool>("OptimizedForSeries")
                        .HasColumnType("boolean");

                    b.Property<bool>("PcGamePass")
                        .HasColumnType("boolean");

                    b.Property<bool>("PlayAnywhere")
                        .HasColumnType("boolean");

                    b.Property<bool>("SmartDelivery")
                        .HasColumnType("boolean");

                    b.Property<bool>("TransferableProgress")
                        .HasColumnType("boolean");

                    b.Property<bool>("xCloudTouch")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("FeatureListOfGameId")
                        .IsUnique();

                    b.ToTable("FeatureLists");
                });

            modelBuilder.Entity("Tavis.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AchievementCount")
                        .HasColumnType("integer");

                    b.Property<double?>("BaseCompletionEstimate")
                        .HasColumnType("double precision");

                    b.Property<string>("Developer")
                        .HasColumnType("text");

                    b.Property<double?>("FullCompletionEstimate")
                        .HasColumnType("double precision");

                    b.Property<int?>("GamersCompleted")
                        .HasColumnType("integer");

                    b.Property<int?>("GamersWithGame")
                        .HasColumnType("integer");

                    b.Property<int?>("Gamerscore")
                        .HasColumnType("integer");

                    b.Property<double?>("InstallSize")
                        .HasColumnType("double precision");

                    b.Property<bool>("ManuallyScored")
                        .HasColumnType("boolean");

                    b.Property<string>("Publisher")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ServerClosure")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("SiteRating")
                        .HasColumnType("double precision");

                    b.Property<double?>("SiteRatio")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("TrueAchievement")
                        .HasColumnType("integer");

                    b.Property<int>("TrueAchievementId")
                        .HasColumnType("integer");

                    b.Property<bool>("Unobtainables")
                        .HasColumnType("boolean");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Tavis.Models.GameGenre", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastSync")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("Tavis.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "None"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Football"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Third Person Shooter"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Action Horror"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Action-Adventure"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Action-RPG"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Role Playing"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Hack & Slash"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Aerial"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Vehicular Combat"
                        },
                        new
                        {
                            Id = 12,
                            Name = "American Football"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Arcade Racing"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Automobile"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Australian Football"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Baseball"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Basketball"
                        },
                        new
                        {
                            Id = 18,
                            Name = "First Person Shooter"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Battle Royale"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Beat 'em up"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Bowling"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Boxing"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Bull Sports"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Card & Board"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Casino"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Collectable Card Game"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Collection"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Point & Click"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Cricket"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Cue Sports"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Cycling"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Dance"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Darts"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Dodgeball"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Open World"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Dungeon Crawler"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Educational & Trivia"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Party"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Equestrian Sports"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Fishing"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Handball"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Health & Fitness"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Hockey"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Hunting"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Management"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Mech"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Metroidvania"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Mixed Martial Arts"
                        },
                        new
                        {
                            Id = 54,
                            Name = "MMO"
                        },
                        new
                        {
                            Id = 55,
                            Name = "MOBA"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Motocross"
                        },
                        new
                        {
                            Id = 57,
                            Name = "On Rails"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Naval"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Survival"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Paintball"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Pinball"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Real Time"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Roguelite"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Rugby"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Run & Gun"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Sandbox"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Shoot 'em up"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Simulation Racing"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Skateboarding"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Skiing"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Snowboarding"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Stealth"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Survival Horror"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Tennis"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Tower Defence"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Visual Novel"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Volleyball"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Wrestling"
                        },
                        new
                        {
                            Id = 82,
                            Name = "Turn Based"
                        },
                        new
                        {
                            Id = 83,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 84,
                            Name = "Surfing"
                        },
                        new
                        {
                            Id = 85,
                            Name = "Badminton"
                        },
                        new
                        {
                            Id = 86,
                            Name = "Table Tennis"
                        },
                        new
                        {
                            Id = 87,
                            Name = "Skating"
                        },
                        new
                        {
                            Id = 88,
                            Name = "Lacrosse"
                        },
                        new
                        {
                            Id = 89,
                            Name = "Skydiving"
                        });
                });

            modelBuilder.Entity("Tavis.Models.Login", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Tavis.Models.PlayerYearlyChallenge", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<int>("YearlyChallengeId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<string>("Reasoning")
                        .HasColumnType("text");

                    b.Property<string>("WriteIn")
                        .HasColumnType("text");

                    b.Property<long?>("YearlyChallengeId1")
                        .HasColumnType("bigint");

                    b.HasKey("GameId", "YearlyChallengeId", "PlayerId");

                    b.HasIndex("YearlyChallengeId1");

                    b.ToTable("PlayerYearlyChallenges");
                });

            modelBuilder.Entity("Tavis.Models.Registration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EndDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Better Completions Matter",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Calendar Project"
                        });
                });

            modelBuilder.Entity("Tavis.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Tavis.Models.SyncHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PlayerCount")
                        .HasColumnType("integer");

                    b.Property<int?>("Profile")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TaHits")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SyncHistory");
                });

            modelBuilder.Entity("Tavis.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Area")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("Gamertag")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("Xuid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tavis.Models.UserRegistration", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RegistrationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "RegistrationId");

                    b.HasIndex("RegistrationId");

                    b.ToTable("UserRegistration");
                });

            modelBuilder.Entity("Tavis.Models.UserRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Tavis.Models.YearlyChallenge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("YearlyChallenges");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Category = 0,
                            Description = "Complete any game with an audible fictional language",
                            Title = "A Wise Wookie Once Said"
                        });
                });

            modelBuilder.Entity("TavisApi.Models.BcmMiscStat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("HistoricalStats")
                        .HasColumnType("jsonb");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("BcmMiscStats");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":8,\"FullCombo\":false,\"Placement\":31},{\"Year\":2023,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":71}]",
                            PlayerId = 76L
                        },
                        new
                        {
                            Id = 2L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":7},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":40},{\"Year\":2022,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":93},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":73}]",
                            PlayerId = 53L
                        },
                        new
                        {
                            Id = 3L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":70}]",
                            PlayerId = 152L
                        },
                        new
                        {
                            Id = 4L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":119},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":82}]",
                            PlayerId = 25L
                        },
                        new
                        {
                            Id = 5L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":31}]",
                            PlayerId = 155L
                        },
                        new
                        {
                            Id = 6L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":22}]",
                            PlayerId = 27L
                        },
                        new
                        {
                            Id = 7L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":9},{\"Year\":2021,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":41},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":34},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":26}]",
                            PlayerId = 39L
                        },
                        new
                        {
                            Id = 8L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":73},{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":69},{\"Year\":2020,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":57},{\"Year\":2021,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":74},{\"Year\":2022,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":104},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":90}]",
                            PlayerId = 101L
                        },
                        new
                        {
                            Id = 9L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":28},{\"Year\":2021,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":95},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":147},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":139}]",
                            PlayerId = 123L
                        },
                        new
                        {
                            Id = 10L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":67},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":132}]",
                            PlayerId = 148L
                        },
                        new
                        {
                            Id = 11L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":21},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":56}]",
                            PlayerId = 29L
                        },
                        new
                        {
                            Id = 12L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":117}]",
                            PlayerId = 142L
                        },
                        new
                        {
                            Id = 13L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":21},{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":26},{\"Year\":2020,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":3},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":8},{\"Year\":2022,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":17},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":102}]",
                            PlayerId = 50L
                        },
                        new
                        {
                            Id = 14L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":101},{\"Year\":2022,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":85},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":119}]",
                            PlayerId = 163L
                        },
                        new
                        {
                            Id = 15L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":4},{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":33}]",
                            PlayerId = 57L
                        },
                        new
                        {
                            Id = 16L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":55},{\"Year\":2019,\"Rgsc\":7,\"FullCombo\":false,\"Placement\":50},{\"Year\":2020,\"Rgsc\":10,\"FullCombo\":false,\"Placement\":54},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":86},{\"Year\":2022,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":78},{\"Year\":2023,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":103}]",
                            PlayerId = 143L
                        },
                        new
                        {
                            Id = 17L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":6}]",
                            PlayerId = 87L
                        },
                        new
                        {
                            Id = 18L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":40},{\"Year\":2021,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":28},{\"Year\":2022,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":25},{\"Year\":2023,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":64}]",
                            PlayerId = 32L
                        },
                        new
                        {
                            Id = 19L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":32}]",
                            PlayerId = 22L
                        },
                        new
                        {
                            Id = 20L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":114},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":126}]",
                            PlayerId = 49L
                        },
                        new
                        {
                            Id = 21L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":11},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":46}]",
                            PlayerId = 10L
                        },
                        new
                        {
                            Id = 22L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":2},{\"Year\":2022,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":4}]",
                            PlayerId = 156L
                        },
                        new
                        {
                            Id = 23L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":121}]",
                            PlayerId = 140L
                        },
                        new
                        {
                            Id = 24L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":57},{\"Year\":2020,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":49},{\"Year\":2021,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":82},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":94},{\"Year\":2023,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":40}]",
                            PlayerId = 38L
                        },
                        new
                        {
                            Id = 25L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":42}]",
                            PlayerId = 8L
                        },
                        new
                        {
                            Id = 26L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":7,\"FullCombo\":false,\"Placement\":12},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":5},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":8},{\"Year\":2023,\"Rgsc\":9,\"FullCombo\":false,\"Placement\":17}]",
                            PlayerId = 3L
                        },
                        new
                        {
                            Id = 27L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":7},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":16},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":47}]",
                            PlayerId = 16L
                        },
                        new
                        {
                            Id = 28L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":1},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":3},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":2}]",
                            PlayerId = 134L
                        },
                        new
                        {
                            Id = 29L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":52},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":38},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":20}]",
                            PlayerId = 28L
                        },
                        new
                        {
                            Id = 30L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":107},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":92}]",
                            PlayerId = 85L
                        },
                        new
                        {
                            Id = 31L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":75},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":101}]",
                            PlayerId = 92L
                        },
                        new
                        {
                            Id = 32L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":34},{\"Year\":2020,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":27},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":59},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":35},{\"Year\":2023,\"Rgsc\":8,\"FullCombo\":false,\"Placement\":58}]",
                            PlayerId = 84L
                        },
                        new
                        {
                            Id = 33L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":83},{\"Year\":2021,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":97},{\"Year\":2022,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":128},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":130}]",
                            PlayerId = 75L
                        },
                        new
                        {
                            Id = 34L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":9,\"FullCombo\":false,\"Placement\":30},{\"Year\":2021,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":65},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":46},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":76}]",
                            PlayerId = 35L
                        },
                        new
                        {
                            Id = 35L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":15},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":5}]",
                            PlayerId = 5L
                        },
                        new
                        {
                            Id = 36L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":19},{\"Year\":2019,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":36},{\"Year\":2020,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":36},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":64},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":61},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":51}]",
                            PlayerId = 14L
                        },
                        new
                        {
                            Id = 37L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":72},{\"Year\":2019,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":43},{\"Year\":2020,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":35},{\"Year\":2021,\"Rgsc\":7,\"FullCombo\":false,\"Placement\":75},{\"Year\":2022,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":96},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":112}]",
                            PlayerId = 30L
                        },
                        new
                        {
                            Id = 38L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":19},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":38}]",
                            PlayerId = 15L
                        },
                        new
                        {
                            Id = 39L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":7},{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":6},{\"Year\":2021,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":3},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":5},{\"Year\":2023,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":15}]",
                            PlayerId = 21L
                        },
                        new
                        {
                            Id = 40L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":83},{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":18},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":29},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":50}]",
                            PlayerId = 58L
                        },
                        new
                        {
                            Id = 41L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":81},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":142}]",
                            PlayerId = 124L
                        },
                        new
                        {
                            Id = 42L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":24},{\"Year\":2019,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":12},{\"Year\":2020,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":16},{\"Year\":2021,\"Rgsc\":7,\"FullCombo\":false,\"Placement\":50},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":23},{\"Year\":2023,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":57}]",
                            PlayerId = 12L
                        },
                        new
                        {
                            Id = 43L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":26},{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":52},{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":69},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":69}]",
                            PlayerId = 81L
                        },
                        new
                        {
                            Id = 44L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":10},{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":2},{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":39},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":43},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":84}]",
                            PlayerId = 56L
                        },
                        new
                        {
                            Id = 45L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":135}]",
                            PlayerId = 133L
                        },
                        new
                        {
                            Id = 46L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":43},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":55},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":80}]",
                            PlayerId = 34L
                        },
                        new
                        {
                            Id = 47L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":62},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":69},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":81}]",
                            PlayerId = 18L
                        },
                        new
                        {
                            Id = 48L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":62},{\"Year\":2019,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":35},{\"Year\":2020,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":60},{\"Year\":2021,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":93},{\"Year\":2022,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":92},{\"Year\":2023,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":97}]",
                            PlayerId = 73L
                        },
                        new
                        {
                            Id = 49L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":10,\"FullCombo\":false,\"Placement\":87}]",
                            PlayerId = 141L
                        },
                        new
                        {
                            Id = 50L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":38},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":76},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":61}]",
                            PlayerId = 105L
                        },
                        new
                        {
                            Id = 51L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":59},{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":80},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":84},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":62}]",
                            PlayerId = 43L
                        },
                        new
                        {
                            Id = 104L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":53},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":94},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":88},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":99}]",
                            PlayerId = 71L
                        },
                        new
                        {
                            Id = 52L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":25},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":13},{\"Year\":2022,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":6},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":12}]",
                            PlayerId = 46L
                        },
                        new
                        {
                            Id = 53L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":51},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":1},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":29}]",
                            PlayerId = 93L
                        },
                        new
                        {
                            Id = 54L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":10},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":29},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":105},{\"Year\":2023,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":77}]",
                            PlayerId = 48L
                        },
                        new
                        {
                            Id = 55L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":46},{\"Year\":2019,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":64},{\"Year\":2020,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":20},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":46},{\"Year\":2022,\"Rgsc\":7,\"FullCombo\":false,\"Placement\":112},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":109}]",
                            PlayerId = 100L
                        },
                        new
                        {
                            Id = 56L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":30}]",
                            PlayerId = 69L
                        },
                        new
                        {
                            Id = 57L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":70},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":44}]",
                            PlayerId = 86L
                        },
                        new
                        {
                            Id = 58L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":69},{\"Year\":2019,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":30},{\"Year\":2021,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":89},{\"Year\":2023,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":67}]",
                            PlayerId = 19L
                        },
                        new
                        {
                            Id = 59L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":77},{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":122},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":80},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":132}]",
                            PlayerId = 68L
                        },
                        new
                        {
                            Id = 60L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":79},{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":70},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":91},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":89},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":104}]",
                            PlayerId = 63L
                        },
                        new
                        {
                            Id = 61L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":19}]",
                            PlayerId = 33L
                        },
                        new
                        {
                            Id = 62L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":42},{\"Year\":2019,\"Rgsc\":7,\"FullCombo\":false,\"Placement\":11},{\"Year\":2020,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":8},{\"Year\":2021,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":54},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":18},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":59}]",
                            PlayerId = 44L
                        },
                        new
                        {
                            Id = 63L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":66},{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":44},{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":61},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":65},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":68}]",
                            PlayerId = 36L
                        },
                        new
                        {
                            Id = 64L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":39},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":27}]",
                            PlayerId = 77L
                        },
                        new
                        {
                            Id = 65L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":90},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":111}]",
                            PlayerId = 59L
                        },
                        new
                        {
                            Id = 66L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":18},{\"Year\":2023,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":14}]",
                            PlayerId = 47L
                        },
                        new
                        {
                            Id = 67L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":19},{\"Year\":2020,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":22},{\"Year\":2021,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":55},{\"Year\":2022,\"Rgsc\":10,\"FullCombo\":false,\"Placement\":56},{\"Year\":2023,\"Rgsc\":9,\"FullCombo\":false,\"Placement\":48}]",
                            PlayerId = 62L
                        },
                        new
                        {
                            Id = 68L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":156},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":37}]",
                            PlayerId = 7L
                        },
                        new
                        {
                            Id = 69L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":43}]",
                            PlayerId = 91L
                        },
                        new
                        {
                            Id = 70L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":21},{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":63},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":67},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":87},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":63}]",
                            PlayerId = 89L
                        },
                        new
                        {
                            Id = 71L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":124},{\"Year\":2023,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":83}]",
                            PlayerId = 51L
                        },
                        new
                        {
                            Id = 72L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":24}]",
                            PlayerId = 146L
                        },
                        new
                        {
                            Id = 73L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":27},{\"Year\":2019,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":3},{\"Year\":2020,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":14},{\"Year\":2021,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":30},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":74}]",
                            PlayerId = 24L
                        },
                        new
                        {
                            Id = 74L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":130},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":32},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":35}]",
                            PlayerId = 64L
                        },
                        new
                        {
                            Id = 75L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":7}]",
                            PlayerId = 6L
                        },
                        new
                        {
                            Id = 76L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":68},{\"Year\":2022,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":108},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":133}]",
                            PlayerId = 145L
                        },
                        new
                        {
                            Id = 77L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":79}]",
                            PlayerId = 96L
                        },
                        new
                        {
                            Id = 78L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":112},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":143},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":128}]",
                            PlayerId = 41L
                        },
                        new
                        {
                            Id = 79L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":20},{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":11},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":49}]",
                            PlayerId = 60L
                        },
                        new
                        {
                            Id = 80L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":92},{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":4},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":64}]",
                            PlayerId = 78L
                        },
                        new
                        {
                            Id = 81L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":104},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":138},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":141}]",
                            PlayerId = 103L
                        },
                        new
                        {
                            Id = 82L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":82},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":65}]",
                            PlayerId = 23L
                        },
                        new
                        {
                            Id = 83L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":false,\"Placement\":34}]",
                            PlayerId = 144L
                        },
                        new
                        {
                            Id = 84L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":2},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":8}]",
                            PlayerId = 20L
                        },
                        new
                        {
                            Id = 85L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":1},{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":91},{\"Year\":2020,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":46},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":80},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":83},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":106}]",
                            PlayerId = 70L
                        },
                        new
                        {
                            Id = 86L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":10},{\"Year\":2023,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":3}]",
                            PlayerId = 26L
                        },
                        new
                        {
                            Id = 87L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":42},{\"Year\":2020,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":58},{\"Year\":2021,\"Rgsc\":10,\"FullCombo\":false,\"Placement\":53},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":94}]",
                            PlayerId = 72L
                        },
                        new
                        {
                            Id = 88L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":97},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":129},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":25}]",
                            PlayerId = 55L
                        },
                        new
                        {
                            Id = 89L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":12,\"FullCombo\":true,\"Placement\":9}]",
                            PlayerId = 97L
                        },
                        new
                        {
                            Id = 90L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":62},{\"Year\":2020,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":45},{\"Year\":2021,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":32},{\"Year\":2022,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":12},{\"Year\":2023,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":21}]",
                            PlayerId = 45L
                        },
                        new
                        {
                            Id = 91L,
                            HistoricalStats = "[{\"Year\":2021,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":16},{\"Year\":2022,\"Rgsc\":11,\"FullCombo\":false,\"Placement\":53},{\"Year\":2023,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":13}]",
                            PlayerId = 61L
                        },
                        new
                        {
                            Id = 92L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":8},{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":89},{\"Year\":2020,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":47},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":118},{\"Year\":2022,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":91},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":142}]",
                            PlayerId = 165L
                        },
                        new
                        {
                            Id = 93L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":45}]",
                            PlayerId = 54L
                        },
                        new
                        {
                            Id = 94L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":3}]",
                            PlayerId = 135L
                        },
                        new
                        {
                            Id = 95L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":75},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":76},{\"Year\":2022,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":136},{\"Year\":2023,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":53}]",
                            PlayerId = 65L
                        },
                        new
                        {
                            Id = 96L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":38},{\"Year\":2019,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":85},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":33}]",
                            PlayerId = 37L
                        },
                        new
                        {
                            Id = 97L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":41},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":58},{\"Year\":2022,\"Rgsc\":8,\"FullCombo\":false,\"Placement\":41},{\"Year\":2023,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":45}]",
                            PlayerId = 88L
                        },
                        new
                        {
                            Id = 98L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":98},{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":45},{\"Year\":2020,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":48},{\"Year\":2021,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":100},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":73},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":123}]",
                            PlayerId = 79L
                        },
                        new
                        {
                            Id = 99L,
                            HistoricalStats = "[{\"Year\":2018,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":17},{\"Year\":2019,\"Rgsc\":10,\"FullCombo\":false,\"Placement\":14},{\"Year\":2020,\"Rgsc\":7,\"FullCombo\":false,\"Placement\":26},{\"Year\":2021,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":25},{\"Year\":2022,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":37},{\"Year\":2023,\"Rgsc\":5,\"FullCombo\":false,\"Placement\":18}]",
                            PlayerId = 17L
                        },
                        new
                        {
                            Id = 100L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":54},{\"Year\":2020,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":52},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":72},{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":97},{\"Year\":2023,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":86}]",
                            PlayerId = 52L
                        },
                        new
                        {
                            Id = 101L,
                            HistoricalStats = "[{\"Year\":2022,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":90},{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":93}]",
                            PlayerId = 161L
                        },
                        new
                        {
                            Id = 102L,
                            HistoricalStats = "[{\"Year\":2019,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":74},{\"Year\":2020,\"Rgsc\":2,\"FullCombo\":false,\"Placement\":79},{\"Year\":2021,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":98},{\"Year\":2022,\"Rgsc\":8,\"FullCombo\":false,\"Placement\":102},{\"Year\":2023,\"Rgsc\":1,\"FullCombo\":false,\"Placement\":137}]",
                            PlayerId = 42L
                        },
                        new
                        {
                            Id = 103L,
                            HistoricalStats = "[{\"Year\":2020,\"Rgsc\":6,\"FullCombo\":false,\"Placement\":17},{\"Year\":2021,\"Rgsc\":3,\"FullCombo\":false,\"Placement\":84},{\"Year\":2022,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":70},{\"Year\":2023,\"Rgsc\":4,\"FullCombo\":false,\"Placement\":78}]",
                            PlayerId = 83L
                        },
                        new
                        {
                            Id = 105L,
                            HistoricalStats = "[{\"Year\":2023,\"Rgsc\":0,\"FullCombo\":false,\"Placement\":111}]",
                            PlayerId = 166L
                        });
                });

            modelBuilder.Entity("Tavis.Models.BcmCompletionHistory", b =>
                {
                    b.HasOne("Tavis.Models.Game", "Game")
                        .WithMany("BcmCompletionHistories")
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Tavis.Models.BcmMonthlyStat", b =>
                {
                    b.HasOne("Tavis.Models.BcmPlayer", "BcmPlayer")
                        .WithMany("BcmMonthlyStats")
                        .HasForeignKey("BcmPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BcmPlayer");
                });

            modelBuilder.Entity("Tavis.Models.BcmPlayer", b =>
                {
                    b.HasOne("Tavis.Models.User", "User")
                        .WithOne("BcmPlayer")
                        .HasForeignKey("Tavis.Models.BcmPlayer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tavis.Models.BcmPlayerCompletionHistory", b =>
                {
                    b.HasOne("Tavis.Models.BcmPlayer", "BcmPlayer")
                        .WithMany("BcmPlayerCompletionHistories")
                        .HasForeignKey("BcmPlayerId");

                    b.HasOne("Tavis.Models.Game", "Game")
                        .WithMany("PlayerCompletionHistories")
                        .HasForeignKey("GameId");

                    b.Navigation("BcmPlayer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Tavis.Models.BcmPlayerGame", b =>
                {
                    b.HasOne("Tavis.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tavis.Models.BcmPlayer", "BcmPlayer")
                        .WithMany("BcmPlayerGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BcmPlayer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Tavis.Models.BcmRgsc", b =>
                {
                    b.HasOne("Tavis.Models.BcmPlayer", "BcmPlayer")
                        .WithMany("BcmRgscs")
                        .HasForeignKey("BcmPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BcmPlayer");
                });

            modelBuilder.Entity("Tavis.Models.BcmStat", b =>
                {
                    b.HasOne("Tavis.Models.BcmPlayer", "BcmPlayer")
                        .WithOne("BcmStats")
                        .HasForeignKey("Tavis.Models.BcmStat", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BcmPlayer");
                });

            modelBuilder.Entity("Tavis.Models.DiscordLogin", b =>
                {
                    b.HasOne("Tavis.Models.User", "User")
                        .WithOne("DiscordLogin")
                        .HasForeignKey("Tavis.Models.DiscordLogin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tavis.Models.FeatureList", b =>
                {
                    b.HasOne("Tavis.Models.Game", "Game")
                        .WithOne("FeatureList")
                        .HasForeignKey("Tavis.Models.FeatureList", "FeatureListOfGameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Tavis.Models.GameGenre", b =>
                {
                    b.HasOne("Tavis.Models.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tavis.Models.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Tavis.Models.Login", b =>
                {
                    b.HasOne("Tavis.Models.User", "User")
                        .WithOne("Login")
                        .HasForeignKey("Tavis.Models.Login", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tavis.Models.PlayerYearlyChallenge", b =>
                {
                    b.HasOne("Tavis.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tavis.Models.YearlyChallenge", "YearlyChallenge")
                        .WithMany()
                        .HasForeignKey("YearlyChallengeId1");

                    b.Navigation("Game");

                    b.Navigation("YearlyChallenge");
                });

            modelBuilder.Entity("Tavis.Models.UserRegistration", b =>
                {
                    b.HasOne("Tavis.Models.Registration", "Registration")
                        .WithMany("UserRegistrations")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tavis.Models.User", "User")
                        .WithMany("UserRegistrations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tavis.Models.UserRole", b =>
                {
                    b.HasOne("Tavis.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tavis.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TavisApi.Models.BcmMiscStat", b =>
                {
                    b.HasOne("Tavis.Models.BcmPlayer", "BcmPlayer")
                        .WithOne("BcmMiscStats")
                        .HasForeignKey("TavisApi.Models.BcmMiscStat", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BcmPlayer");
                });

            modelBuilder.Entity("Tavis.Models.BcmPlayer", b =>
                {
                    b.Navigation("BcmMiscStats");

                    b.Navigation("BcmMonthlyStats");

                    b.Navigation("BcmPlayerCompletionHistories");

                    b.Navigation("BcmPlayerGames");

                    b.Navigation("BcmRgscs");

                    b.Navigation("BcmStats");
                });

            modelBuilder.Entity("Tavis.Models.Game", b =>
                {
                    b.Navigation("BcmCompletionHistories");

                    b.Navigation("FeatureList");

                    b.Navigation("GameGenres");

                    b.Navigation("PlayerCompletionHistories");
                });

            modelBuilder.Entity("Tavis.Models.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("Tavis.Models.Registration", b =>
                {
                    b.Navigation("UserRegistrations");
                });

            modelBuilder.Entity("Tavis.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Tavis.Models.User", b =>
                {
                    b.Navigation("BcmPlayer");

                    b.Navigation("DiscordLogin");

                    b.Navigation("Login");

                    b.Navigation("UserRegistrations");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
